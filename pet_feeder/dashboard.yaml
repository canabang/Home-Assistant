title: üêæ Pet Feeder
path: pet-feeder
icon: mdi:food-drumstick
cards:
  - type: horizontal-stack
    cards:
      - type: gauge
        entity: sensor.pourcentage_croquette_restant
        name: Stock Restant
        min: 0
        max: 100
        severity:
          green: 50
          yellow: 25
          red: 10
        needle: true
      - type: custom:mini-graph-card
        entities:
          - entity: sensor.jours_restants_nourriture
            name: Jours restants
            show_state: true
            show_graph: false
        height: 80
        font_size: 75
        card_mod:
          style: |
            ha-card {
              text-align: center;
              {% if states('sensor.jours_restants_nourriture')|float < 3 %}
                background: rgba(244,67,54,0.1);
                border: 2px solid #f44336;
              {% elif states('sensor.jours_restants_nourriture')|float < 7 %}
                background: rgba(255,152,0,0.1);
                border: 2px solid #ff9800;
              {% endif %}
            }
  - type: entities
    title: üìä Consommation Aujourd'hui
    entities:
      - entity: sensor.poids_reel_distribue_aujourd_hui
        name: Dernier repas
        icon: mdi:bowl
      - entity: input_number.pet_feeder_daily_consumption_counter
        name: Total consomm√© aujourd'hui
        icon: mdi:counter
      - entity: sensor.consommation_quotidienne_moyenne
        name: Moyenne quotidienne
        icon: mdi:chart-line
      - entity: input_number.pet_feeder_target_daily_weight
        name: Objectif quotidien
        icon: mdi:target
  - type: entities
    title: ‚è∞ Portions Programm√©es
    entities:
      - entity: sensor.portions_calculees_matin
        name: üåÖ Matin (8h00)
        secondary_info: >
          {{ state_attr('sensor.portions_calculees_matin', 'poids_theorique') }}
          - 

          {{ state_attr('sensor.portions_calculees_matin', 'pourcentage') }}
      - entity: sensor.portions_calculees_midi
        name: ‚òÄÔ∏è Midi (14h00)
        secondary_info: >
          {{ state_attr('sensor.portions_calculees_midi', 'poids_theorique') }}
          - 

          {{ state_attr('sensor.portions_calculees_midi', 'pourcentage') }}
      - entity: sensor.portions_calculees_soir
        name: üåô Soir (20h00)
        secondary_info: >
          {{ state_attr('sensor.portions_calculees_soir', 'poids_theorique') }}
          - 

          {{ state_attr('sensor.portions_calculees_soir', 'pourcentage') }}
      - type: divider
      - entity: sensor.total_portions_calculees
        name: üìã Total programm√©
        secondary_info: >
          {{ state_attr('sensor.total_portions_calculees',
          'poids_total_theorique') }}
  - type: horizontal-stack
    cards:
      - type: entities
        title: üì¶ Gestion Stock
        entities:
          - entity: input_number.pet_feeder_stock_estime
            name: Stock estim√©
            icon: mdi:warehouse
          - entity: input_number.pet_feeder_max_capacity
            name: Capacit√© max
            icon: mdi:barrel
          - entity: input_boolean.pet_feeder_stock_was_low
            name: Stock √©tait bas
            icon: mdi:alert-circle
          - entity: number.pet_feeder_portion_weight
            name: Poids par portion
            icon: mdi:scale
  - type: conditional
    conditions:
      - entity: sensor.consommation_quotidienne_moyenne
        state_not: "0"
    card:
      type: entities
      title: üìà Statistiques Avanc√©es
      entities:
        - type: custom:multiple-entity-row
          entity: sensor.consommation_quotidienne_moyenne
          name: Analyse consommation
          show_state: false
          entities:
            - entity: sensor.consommation_quotidienne_moyenne
              name: Moyenne
              unit: g/jour
            - entity: input_number.pet_feeder_target_daily_weight
              name: Objectif
              unit: g/jour
        - entity: input_number.pet_feeder_total_distributed
          name: Total distribu√© (cumul)
          icon: mdi:counter
        - type: custom:bar-card
          entity: sensor.pourcentage_croquette_restant
          name: Niveau du r√©servoir
          positions:
            icon: "off"
            name: inside
          severity:
            - color: "#f44336"
              from: 0
              to: 15
            - color: "#ff9800"
              from: 15
              to: 30
            - color: "#4caf50"
              from: 30
              to: 100
  - type: entities
    title: üéõÔ∏è Contr√¥les
    entities:
      - type: call-service
        name: üîÑ Forcer recalcul portions
        service: homeassistant.update_entity
        service_data:
          entity_id: sensor.portions_calculees_matin
        icon: mdi:calculator
      - type: call-service
        name: üçΩÔ∏è Distribution manuelle test
        service: mqtt.publish
        service_data:
          topic: zigbee2mqtt02/Pet feeder/set
          payload: "{\"feed\": \"\"}"
        icon: mdi:play
      - type: call-service
        name: üìä Reset compteur jour
        service: input_number.set_value
        service_data:
          entity_id: input_number.pet_feeder_daily_consumption_counter
          value: 0
        icon: mdi:restore
        confirmation:
          text: √ätes-vous s√ªr de vouloir remettre le compteur √† z√©ro ?
